{"version":3,"sources":["components/UserEntryPage.jsx","components/UserDetailsPage.jsx","App.js","serviceWorker.js","index.js"],"names":["UserEntry","state","username","userNameChanged","evt","target","value","_this","setState","console","log","_this2","this","react_default","a","createElement","Fragment","className","src","alt","onChange","style","marginTop","marginBottom","spellCheck","placeholder","NavLink","to","pathname","user","fontSize","letterSpacing","textAlign","fontFamily","Component","UserDetails","user_available","user_avatar","public_repos","user_url","user_name","user_location","user_bio","user_email","user_company","repos_url","user_followers","user_createdat","user_updatedat","user_type","repos","createdat","updatedat","href","width","height","props","location","color","id","maxHeight","overflowY","length","map","item","data-toggle","data-placement","title","description","html_url","name","language","split","fontWeight","axios","get","then","res","data","avatar_url","bio","email","company","followers","created_at","updated_at","type","resp","reason","catch","error","App","BrowserRouter","Switch","Route","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f52dcd3d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './UserEntryPage.css';\r\n\r\nclass UserEntry extends Component {\r\n    state = {\r\n        username: ''\r\n    }\r\n    render() { \r\n        console.log('User Entry Page Rendered!');\r\n        return (<React.Fragment>\r\n            <div className=\"container\">\r\n                <img src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\" alt=\"Github Logo\" className=\"imagegit\"></img>\r\n                <br/>\r\n                <span className=\"intro1\">Welcome to the <span className=\"gitreg\">Git Registry</span>.</span>\r\n                <br/>\r\n                <br/>\r\n                <span className=\"intro2\">Please enter a Git username.</span>\r\n                <br/>\r\n                <input onChange={evt => this.userNameChanged(evt)} style={{ marginTop: \"10px\", marginBottom: \"10px\" }} spellCheck=\"false\" className=\"userinput\" placeholder=\"Enter Username\"/>\r\n                <br/>\r\n                <NavLink to={{ pathname: \"/users/\" + this.state.username, state: { 'user': this.state.username}}}>\r\n                    <button style={{ fontSize: \"30px\", letterSpacing: \"8px\", textAlign: \"center\", fontFamily: \"aaramfont\" }} className=\"btn btn-outline-warning mt-5 mr-5 ml-5 mb-2\">Fetch Details</button>\r\n                </NavLink>\r\n                <br/>\r\n                <span className=\"bottomtip\">And we will get everything ready for you!</span>\r\n            </div>\r\n        </React.Fragment>);\r\n    }\r\n    userNameChanged = (evt) => {\r\n        const username = evt.target.value;\r\n        this.setState({ username }, () => {\r\n            console.log(this.state.username);\r\n        });\r\n    }\r\n}\r\n \r\nexport default UserEntry;","import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport './UserDetailsPage.css';\r\n\r\nclass UserDetails extends Component {\r\n    state = {\r\n        user_available: false,\r\n        user_avatar: \"\",\r\n        public_repos: 0,\r\n        user_url: \"\",\r\n        user_name: \"\",\r\n        user_location: \"\",\r\n        user_bio: \"\",\r\n        user_email: \"\",\r\n        user_company: \"\",\r\n        repos_url: \"\",\r\n        user_followers: 0,\r\n        user_createdat: \"\",\r\n        user_updatedat: \"\",\r\n        user_type: \"\",\r\n        repos: []\r\n    }\r\n    render() {\r\n        console.log('User Details Page is Rendered..!');\r\n\r\n        let createdat = this.state.user_createdat;\r\n        let updatedat = this.state.user_updatedat;\r\n    \r\n        return (<React.Fragment>\r\n            <nav className=\"navbar navbar-light bg-light\">\r\n                <a href={this.state.user_url} className=\"navbar-brand\" style={{ fontFamily: \"aaramfont\" }}><img src=\"https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png\" alt=\"githublogo\" style={{ width: \"50px\", height: \"50px\" }}/> / {this.props.location.state.user}</a>\r\n            </nav>\r\n            {(this.state.user_available) ? \r\n            <div className=\"detailcontainer\">\r\n                <div>\r\n                    <a href={this.state.user_url}><img src={this.state.user_avatar} alt=\"No Profile Photo\" className=\"userpic\"/></a>\r\n                    <br/>\r\n                    <div className=\"card userfooter\">\r\n                        <h6 className=\"card-subtitle\" style={{ fontFamily: \"aaramfont\", color: \"#008080\" }}>Bio</h6>\r\n                        <span className=\"userbio\">{(this.state.user_bio) ? this.state.user_bio : <span className=\"userbio\" style={{ color: \"red\" }}>-NA-</span>}</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"card userdetails\">\r\n                    <h6 className=\"card-subtitle\" style={{ fontFamily: \"aaramfont\", color: \"#FF0000\" }}>Name</h6>\r\n                    <span className=\"userdet\">{(this.state.user_name) ? this.state.user_name : <span className=\"userdet\" style={{ color: \"red\" }}>-NA-</span>}</span>\r\n                    <br/>\r\n                    <h6 className=\"card-subtitle\" style={{ fontFamily: \"aaramfont\", color: \"#4FA04F\" }}>Location</h6>\r\n                    <span className=\"userdet\">{(this.state.user_location) ? this.state.user_location : <span className=\"userdet\" style={{ color: \"red\" }}>-NA-</span>}</span>\r\n                    <br/>\r\n                    <h6 className=\"card-subtitle\" style={{ fontFamily: \"aaramfont\", color: \"#A04FA0\" }}>Company</h6>\r\n                    <span className=\"userdet\">{(this.state.user_company) ? this.state.user_company : <span className=\"userdet\" style={{ color: \"red\" }}>-NA-</span>}</span>\r\n                    <br/>\r\n                    <h6 className=\"card-subtitle\" style={{ fontFamily: \"aaramfont\", color: \"#DC7633\" }}>Type</h6>\r\n                    <span className=\"userdet\">{(this.state.user_type) ? this.state.user_type : <span className=\"userdet\" style={{ color: \"red\" }}>-NA-</span>}</span>\r\n                </div>\r\n                <div>\r\n                    <div className=\"card publicrepos\">\r\n                        <h1 className=\"card-subtitle\" style={{ fontFamily: \"aaramfont\", color: \"#99A3A4\" }}>Public Repos</h1>\r\n                        <span className=\"userrepos\">{(this.state.public_repos === 0) ? <span style={{ color: \"red\" }}>0</span> : this.state.public_repos}</span>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"card publicrepos\">\r\n                        <h1 className=\"card-subtitle\" style={{ fontFamily: \"aaramfont\", color: \"#27AE60\" }}>Followers</h1>\r\n                        <span className=\"userrepos\">{(this.state.user_followers === 0) ? <span style={{ color: \"red\" }}>0</span> : this.state.user_followers}</span>\r\n                    </div>\r\n                </div>\r\n                <div>\r\n                    <div id=\"reposcomp\" className=\"card repos\">\r\n                        <h2 className=\"card-subtitle\" style={{ fontFamily: \"aaramfont\", marginBottom: \"5px\", color: \"#5874DE\" }}>Repos</h2>\r\n                        <div style={{ maxHeight: \"200px\", overflowY: \"auto\" }}>\r\n                        {\r\n                            (this.state.repos.length === 0) ? <span style={{ fontFamily: \"aaramfont\", fontSize: \"12px\" }}>No Repos</span> :\r\n                            this.state.repos.map(item => {\r\n                                return (<div className=\"repoItem\">\r\n                                    <a data-toggle=\"tooltip\" data-placement=\"top\" title={ item.description } style={{ fontFamily: \"aaramfont\", fontSize: \"18px\" }} href={ item.html_url }>{ item.name }</a>\r\n                                    <br/>\r\n                                    <span style={{ fontFamily: \"aaramfont\", fontSize: \"12px\" }}>{ (item.language) ? item.language : \"Not known\" }</span>\r\n                                </div>)\r\n                            })\r\n                        }\r\n                        </div>\r\n                    </div>\r\n                    <br/>\r\n                    <div className=\"card userdetails\">\r\n                        <h6 className=\"card-subtitle\" style={{ fontFamily: \"aaramfont\", color: \"#34495E\" }}>Last Updated On</h6>\r\n                        <span className=\"userdet\" style={{ fontSize: \"20px\" }}>{(this.state.user_updatedat) ? updatedat.split('T')[0] : <span className=\"userdet\" style={{ color: \"red\" }}>-NA-</span>}</span>\r\n                        <br/>\r\n                        <h6 className=\"card-subtitle\" style={{ fontFamily: \"aaramfont\", color: \"#4FA04F\" }}>Profile Created On</h6>\r\n                        <span className=\"userdet\" style={{ fontSize: \"20px\" }}>{(this.state.user_createdat) ? createdat.split('T')[0] : <span className=\"userdet\" style={{ color: \"red\" }}>-NA-</span>}</span>\r\n                    </div>\r\n                </div>\r\n                </div> : \r\n                <div className=\"errorcontainer\">\r\n                    <span style={{ fontSize: \"60px\", color: \"orangered\", fontWeight: \"bold\", fontFamily: \"aaramfont\" }}>404</span>\r\n                    <br/>\r\n                    <span style={{ fontSize: \"50px\", fontFamily: \"aaramfont\" }}>Oops! User can't be found!</span>\r\n                </div>\r\n            }\r\n        </React.Fragment>);\r\n    }\r\n    componentWillMount() {\r\n        axios.get('https://api.github.com/users/' + this.props.location.state.user).then(res => {\r\n            this.setState({ public_repos: res.data.public_repos, \r\n                user_name: res.data.name, \r\n                user_avatar: res.data.avatar_url, \r\n                user_bio: res.data.bio, \r\n                user_email: res.data.email, \r\n                user_location: res.data.location, \r\n                user_url: res.data.html_url, \r\n                user_company: res.data.company, \r\n                repos_url: res.data.repos_url, \r\n                user_followers: res.data.followers,\r\n                user_createdat: res.data.created_at,\r\n                user_updatedat: res.data.updated_at,\r\n                user_type: res.data.type }, () => {\r\n                console.log('User Name - ' + this.state.user_name);\r\n                this.setState({ user_available: true });\r\n\r\n                // fetch the repos of the user\r\n                axios.get(res.data.repos_url).then(resp => {\r\n                    this.setState({ repos: resp.data });\r\n                }, reason => {\r\n                    console.log(reason);\r\n                });\r\n            });\r\n        }, (reason) => {\r\n            console.log(reason);\r\n        }).catch((error) => {\r\n            console.log(error);\r\n        });\r\n    }\r\n}\r\n \r\nexport default UserDetails;","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport UserEntry from './components/UserEntryPage';\nimport UserDetails from './components/UserDetailsPage';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <Switch>\n          <Route exact path=\"/\" component={UserEntry}/>\n          <Route path=\"/users/:handle\" component={UserDetails}/>\n        </Switch>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}